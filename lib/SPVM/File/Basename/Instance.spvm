class File::Basename::Instance {
  use File::Basename::Instance::Win32;
  use File::Basename::Instance::Unix;
  use Sys;
  
  # Interfaces
  interface File::Basename::Instance::Interface;
  
  # Class Methods
  static method new : File::Basename::Instance () {
    
    my $self : File::Basename::Instance;
    
    if (Sys->defined("_WIN32")) {
      $self = File::Basename::Instance::Win32->new;
    }
    else {
      $self = File::Basename::Instance::Unix->new;
    }
    
    return $self;
  }
  
  # Instance Methods
  method has_interfaces : int () { return 1; }
  
  method fileparse : string[] ($path : string) {
    return $self->(File::Basename::Instance::Interface)->fileparse($path);
  }
  
  method basename : string ($path : string) {
    return $self->(File::Basename::Instance::Interface)->basename($path);
  }
  
  method dirname : string ($path : string) {
    return $self->(File::Basename::Instance::Interface)->dirname($path);
  }
}
